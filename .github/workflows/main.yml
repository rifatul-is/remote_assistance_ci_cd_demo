name: Android Test Workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [29]

    steps:
    - uses: actions/checkout@v4.1.1
      name: Check out repository code

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

#    - name: Cache Android SDK and emulator
#      uses: actions/cache@v2
#      with:
#        path: |
#          ~/Library/Android/sdk
#          ~/.android
#        key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/build.gradle') }}
#        restore-keys: |
#          ${{ runner.os }}-android-sdk-
#
#    - name: Setup Android SDK
#      run: /Users/runner/work/remote_assistance_ci_cd_demo/remote_assistance_ci_cd_demo/set_up_android_sdk.sh

#    - name: Create and start emulator
#      run: /Users/runner/work/remote_assistance_ci_cd_demo/remote_assistance_ci_cd_demo/start_emulator.sh

    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.api-level }}

    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

#    - name: Run Emulator
#      uses: reactivecircus/android-emulator-runner@v2
#      with:
#        api-level: 29
#        script: ./gradlew connectedCheck

#    - name: Check disk space
#      run: df -h

#    - name: Installing Node
#      uses: actions/setup-node@v4
#      with:
#        node-version: 21
#
#    - name: Checking Node and NPM
#      run: npm -v
#
#    - name: Installing Appium
#      run: npm install --unsafe-per=true -g appium@1.22.0
#
#    - name: Checking Node Packages
#      run: npm list -g --depth=0
#
#    - name: Checking Appium Packages
#      run: appium --version

#    - name: Build with gradle
#      run: ./gradlew build
#
#    - name: Upload build artifact
#      uses: actions/upload-artifact@v4
#      with:
#        name: testBuild.apk
#        path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

    - name: List of Devices
      run: adb devices

    - name: Run Emulator in BG
      run : /Users/runner/work/remote_assistance_ci_cd_demo/remote_assistance_ci_cd_demo/run_emulator_in_background.sh

#    - name: Check if directory exists
#      run: |
#        TARGET_DIRECTORY="/Users/runner/.katalon/license"
#        SOURCE_DIRECTORY="/path/to/source/directory" # Replace this with the actual source directory path
#        if [ -d "$TARGET_DIRECTORY" ]; then
#          echo "The directory $TARGET_DIRECTORY exists."
#        else
#          echo "The directory $TARGET_DIRECTORY does not exist. Copying from $SOURCE_DIRECTORY..."
#          cp -r "$SOURCE_DIRECTORY" "$TARGET_DIRECTORY"
#          echo "Copy completed."
#        fi

    - name: Katalon Studio Github Action
      uses: katalon-studio/katalon-studio-github-action@v3.0
      with:
        version: '8.6.8'
        projectPath: '/Users/runner/work/remote_assistance_ci_cd_demo/remote_assistance_ci_cd_demo/katalon-tests'
        args: ' -retry=0 -testSuitePath="Test Suites/Remote Assistance Demo Test" -browserType="Android" -deviceId="emulator-5554" -executionProfile="default" --config -webui.autoUpdateDrivers=true'

  


        
